#==================================================================
# DATE: 2025-09-17
# AUTHOR: CiMorn
#==================================================================


#==================================================================
# 方法二：先加1，逆着判断，最后一位是10并且当前位置为首位，则数组挪位置
#        最后一位是10并且当前位置不是首位，前一位加1
#       最后一位不是10，则返回
#==================================================================
class Solution(object):
    def plusOne(self, digits):
        n= len(digits)
        digits[n-1]+=1
        for i in range(n-1,-1,-1):
            if digits[i]==10 and i==0:
                digits[i]=0
                digits=[1]+digits
            elif digits[i]==10 and i>0:
                digits[i]=0
                digits[i-1]+=1
            else:
                return digits            
        return digits
#==================================================================



#==================================================================
# 方法一：该函数先将数字数组转换为对应的整数并加1，再将结果转回数字数组。
#==================================================================
# class Solution(object):
#     def plusOne(self, digits):
#         sum=1 
#         for i in range(len(digits)-1,-1,-1):
#             sum=sum+digits[i]*10**(len(digits)-1-i)
#         return list(map(int, str(sum)))
#==================================================================
        


if __name__ == "__main__":
    # 用列表存储所有测试用例
    test_cases = [
        ([1,2,3]),
        ([4,3,2,1]),
        ([9]),
        ([9,9,9])
    ]
    
    print("-" * 50)  # 分隔线
    # 循环遍历测试用例并执行
    for test_x in test_cases:
        print(f"输入: '{test_x}'")
        result = Solution().plusOne(test_x)
        # 打印测试结果（包含输入、实际输出和预期输出）
        print(f"输出: '{result}'")
        print("-" * 50)  # 分隔线